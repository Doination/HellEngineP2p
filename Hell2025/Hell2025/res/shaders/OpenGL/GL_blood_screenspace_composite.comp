#version 450
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rgba8, binding = 0) uniform image2D GBufferBaseColorImage;
layout(rgba8, binding = 1) uniform image2D GBufferRMAImage;
layout(binding = 2) uniform sampler2D DecalMaskTexture;

float saturate(float value) {
	return clamp(value, 0.0, 1.0);
}

void main() {
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);   
    ivec2 outputImageSize = imageSize(GBufferBaseColorImage);
    vec2 uv_screenspace = vec2(pixelCoords + 0.5) / vec2(outputImageSize);
        
    vec3 baseColor = imageLoad(GBufferBaseColorImage, pixelCoords).rgb;
    vec4 rma = imageLoad(GBufferRMAImage, pixelCoords);

    float decalMask = texture(DecalMaskTexture, uv_screenspace).r;

    vec3 bloodBaseColor = vec3(0.2, 0.00, 0);
    vec3 bloodRMA = vec3(0.125, 0.25, 1.0);

    vec3 outputBaseColor = mix(baseColor, bloodBaseColor, decalMask);
    vec3 outputRMA = mix(rma.rgb, bloodRMA, decalMask);

   imageStore(GBufferBaseColorImage, pixelCoords, vec4(outputBaseColor, 1.0));
   imageStore(GBufferRMAImage, pixelCoords, vec4(outputRMA, 1.0));
}